# Load necessary libraries
library(tidymodels)
library(tidyverse)
# Load home_runs dataset
url <- "https://ajohns24.github.io/data/home_runs.csv"
home_runs_data <- read_csv(url)
# Data Preprocessing
# Assuming your target variable is named "HomeRun" and other columns are predictor variables
home_runs_data <- home_runs_data %>%
drop_na() %>%
mutate_if(is.character, as.factor) %>%
mutate_if(is.factor, as.numeric) %>%
mutate(HomeRun = ifelse(HomeRun == "Yes", 1, 0))
# Load necessary libraries
library(tidymodels)
library(tidyverse)
# Load home_runs dataset
url <- "https://ajohns24.github.io/data/home_runs.csv"
home_runs_data <- read_csv(url)
# Load home_runs dataset
url <- "https://ajohns24.github.io/data/home_runs.csv"
home_runs_data <- read_csv(url)
# Data Preprocessing
# Assuming your target variable is named "HomeRun" and other columns are predictor variables
home_runs_data <- home_runs_data %>%
drop_na() %>%
mutate_if(is.character, as.factor) %>%
mutate_if(is.factor, as.numeric) %>%
mutate(HomeRun = ifelse(HomeRun == "Yes", 1, 0))
# Load necessary libraries
library(tidymodels)
library(tidyverse)
# Load home_runs dataset
url <- "https://ajohns24.github.io/data/home_runs.csv"
home_runs_data <- read_csv(url)
# Get the model coefficients
model_coef <- tidy(logistic_workflow)
set.seed(253)
lasso_models <- lasso_workflow %>%
tune_grid(
grid = grid_regular(penalty(range = c(-3, -0.5)), levels = 50),
resamples = vfold_cv(home_runs_data, v = 10),
metrics = metric_set(accuracy)
)
parsimonious_penalty <- lasso_models %>%
select_by_one_std_err(metric = "accuracy", desc(penalty))
# Load necessary libraries
library(tidymodels)
library(tidyverse)
# Load home_runs dataset
url <- "https://ajohns24.github.io/data/home_runs.csv"
home_runs_data <- read_csv(url)
# Define and train the logistic regression model
logistic_spec <- logistic_reg() %>%
set_mode("classification") %>%
set_engine("glm")
logistic_workflow <- workflow() %>%
add_model(logistic_spec) %>%
fit(data = train_data)
logistic_workflow <- workflow() %>%
add_model(logistic_spec) %>%
fit(data = home_runs_data)
logistic_workflow <- workflow() %>%
add_recipe(lasso_recipe)
recipe_lasso <- recipe(RainTomorrow ~ ., data = sydney) %>%
step_dummy(all_nominal_predictors())
recipe_lasso <- recipe(RainTomorrow ~ ., data = home_run_data) %>%
step_dummy(all_nominal_predictors())
recipe_lasso <- recipe(RainTomorrow ~ ., data = home_runs_data) %>%
step_dummy(all_nominal_predictors())
recipe_lasso <- recipe(is_home_run ~ ., data = home_runs_data) %>%
step_dummy(all_nominal_predictors())
# Define and train the logistic regression model
logistic_spec <- logistic_reg() %>%
set_mode("classification") %>%
set_engine("glm")
logistic_workflow <- workflow() %>%
add_recipe(recipe_lasso)
add_model(logistic_spec) %>%
fit(data = home_runs_data)
logistic_workflow <- workflow() %>%
add_recipe(recipe_lasso) %>%
add_model(logistic_spec) %>%
fit(data = home_runs_data)
recipe_lasso <- recipe(is_home_run ~ ., data = home_runs_data) %>%
step_dummy(all_nominal_predictors())
# Define and train the logistic regression model
logistic_spec <- logistic_reg() %>%
set_mode("classification") %>%
set_engine("glm")
# Define and train the logistic regression model with Lasso regularization
logistic_spec <- logistic_reg(penalty = 1, mixture = 1) %>%
set_mode("classification") %>%
set_engine("glmnet")
logistic_workflow <- workflow() %>%
add_recipe(recipe_lasso) %>%
add_model(logistic_spec) %>%
fit(data = home_runs_data)
# Load home_runs dataset
url <- "https://ajohns24.github.io/data/home_runs.csv"
home_runs_data <- read_csv(url)
recipe_lasso <- recipe(is_home_run ~ ., data = home_runs_data) %>%
step_dummy(all_nominal_predictors())
# Define and train the logistic regression model
logistic_spec <- logistic_reg() %>%
set_mode("classification") %>%
set_engine("glm")
# Define and train the logistic regression model with Lasso regularization
logistic_spec <- logistic_reg(penalty = 1, mixture = 1) %>%
set_mode("classification") %>%
set_engine("glmnet")
# Define and train the logistic regression model with Lasso regularization
logistic_spec <- logistic_reg(penalty = 1, mixture = 1) %>%
set_mode("classification") %>%
set_engine("glmnet")
logistic_workflow <- workflow() %>%
add_recipe(recipe_lasso) %>%
add_model(logistic_spec) %>%
fit(data = home_runs_data)
logistic_workflow <- workflow() %>%
add_recipe(recipe_lasso) %>%
add_model(logistic_spec)
logistic_workflow <- workflow() %>%
add_recipe(recipe_lasso) %>%
add_model(logistic_spec)
set.seed(253)
lasso_models <- lasso_workflow %>%
tune_grid(
grid = grid_regular(penalty(range = c(-3, -0.5)), levels = 50),
resamples = vfold_cv(home_runs_data, v = 10),
metrics = metric_set(accuracy)
)
lasso_workflow <- workflow() %>%
add_recipe(recipe_lasso) %>%
add_model(logistic_spec)
set.seed(253)
lasso_models <- lasso_workflow %>%
tune_grid(
grid = grid_regular(penalty(range = c(-3, -0.5)), levels = 50),
resamples = vfold_cv(home_runs_data, v = 10),
metrics = metric_set(accuracy)
)
set.seed(253)
lasso_models <- lasso_workflow %>%
tune_grid(
grid = grid_regular(penalty(range = c(-3, -0.5)), levels = 2),
resamples = vfold_cv(home_runs_data, v = 10),
metrics = metric_set(accuracy)
)
# Load necessary libraries
library(tidymodels)
library(tidyverse)
# Load home_runs dataset
url <- "https://ajohns24.github.io/data/home_runs.csv"
home_runs_data <- read_csv(url)
recipe_lasso <- recipe(is_home_run ~ ., data = home_runs_data) %>%
step_dummy(all_nominal_predictors())
# Define and train the logistic regression model with Lasso regularization
logistic_spec <- logistic_reg(penalty = 1, mixture = 1) %>%
set_mode("classification") %>%
set_engine("glmnet")
lasso_workflow <- workflow() %>%
add_recipe(recipe_lasso) %>%
add_model(logistic_spec)
set.seed(253)
lasso_models <- lasso_workflow %>%
tune_grid(
grid = grid_regular(penalty(range = c(-3, -0.5)), levels = 50),
resamples = vfold_cv(home_runs_data, v = 10),
metrics = metric_set(accuracy)
)
glimpse(home_runs_data)
glimpse(home_runs_data)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
summary(home_runs_data)
class(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
class(home_runs_data$home_team)
glimpse(home_runs_data)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
home_runs_data$away_team <- as.factor(home_runs_data$away_team)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
home_runs_data$away_team <- as.factor(home_runs_data$away_team)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
home_runs_data$away_team <- as.factor(home_runs_data$away_team)
home_runs_data$batter_team <- as.factor(home_runs_data$batter_team)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
home_runs_data$away_team <- as.factor(home_runs_data$away_team)
home_runs_data$batter_team <- as.factor(home_runs_data$batter_team)
home_runs_data$pitcher_name <- as.factor(home_runs_data$pitcher_name)
home_runs_data$bb_type <- as.factor(home_runs_data$bb_type)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
home_runs_data$away_team <- as.factor(home_runs_data$away_team)
home_runs_data$batter_team <- as.factor(home_runs_data$batter_team)
home_runs_data$pitcher_name <- as.factor(home_runs_data$pitcher_name)
home_runs_data$bb_type <- as.factor(home_runs_data$bb_type)
home_runs_data$park <- as.factor(home_runs_data$park)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
home_runs_data$away_team <- as.factor(home_runs_data$away_team)
home_runs_data$batter_team <- as.factor(home_runs_data$batter_team)
home_runs_data$pitcher_name <- as.factor(home_runs_data$pitcher_name)
home_runs_data$bb_type <- as.factor(home_runs_data$bb_type)
home_runs_data$park <- as.factor(home_runs_data$park)
home_runs_data$Cover <- as.factor(home_runs_data$Cover)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
home_runs_data$away_team <- as.factor(home_runs_data$away_team)
home_runs_data$batter_team <- as.factor(home_runs_data$batter_team)
home_runs_data$pitcher_name <- as.factor(home_runs_data$pitcher_name)
home_runs_data$bb_type <- as.factor(home_runs_data$bb_type)
home_runs_data$park <- as.factor(home_runs_data$park)
home_runs_data$Cover <- as.factor(home_runs_data$Cover)
recipe_lasso <- recipe(is_home_run ~ ., data = home_runs_data) %>%
step_dummy(all_nominal_predictors())
# Define and train the logistic regression model with Lasso regularization
logistic_spec <- logistic_reg(penalty = 1, mixture = 1) %>%
set_mode("classification") %>%
set_engine("glmnet")
lasso_workflow <- workflow() %>%
add_recipe(recipe_lasso) %>%
add_model(logistic_spec)
set.seed(253)
lasso_models <- lasso_workflow %>%
tune_grid(
grid = grid_regular(penalty(range = c(-3, -0.5)), levels = 50),
resamples = vfold_cv(home_runs_data, v = 10),
metrics = metric_set(accuracy)
)
# Load necessary libraries
library(tidymodels)
library(tidyverse)
# Load home_runs dataset
url <- "https://ajohns24.github.io/data/home_runs.csv"
home_runs_data <- read_csv(url)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
home_runs_data$away_team <- as.factor(home_runs_data$away_team)
home_runs_data$batter_team <- as.factor(home_runs_data$batter_team)
home_runs_data$pitcher_name <- as.factor(home_runs_data$pitcher_name)
home_runs_data$bb_type <- as.factor(home_runs_data$bb_type)
home_runs_data$park <- as.factor(home_runs_data$park)
home_runs_data$Cover <- as.factor(home_runs_data$Cover)
home_runs_data$pitchname <- as.factor(home_runs_data$pitch_name)
recipe_lasso <- recipe(is_home_run ~ ., data = home_runs_data) %>%
step_dummy(all_nominal_predictors())
# Define and train the logistic regression model with Lasso regularization
logistic_spec <- logistic_reg(penalty = 1, mixture = 1) %>%
set_mode("classification") %>%
set_engine("glmnet")
lasso_workflow <- workflow() %>%
add_recipe(recipe_lasso) %>%
add_model(logistic_spec)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
home_runs_data$away_team <- as.factor(home_runs_data$away_team)
home_runs_data$batter_team <- as.factor(home_runs_data$batter_team)
home_runs_data$pitcher_name <- as.factor(home_runs_data$pitcher_name)
home_runs_data$bb_type <- as.factor(home_runs_data$bb_type)
home_runs_data$park <- as.factor(home_runs_data$park)
home_runs_data$Cover <- as.factor(home_runs_data$Cover)
home_runs_data$pitchname <- as.factor(home_runs_data$pitch_name)
recipe_lasso <- recipe(is_home_run ~ ., data = home_runs_data) %>%
step_dummy(all_nominal_predictors())
# Define and train the logistic regression model with Lasso regularization
logistic_spec <- logistic_reg(penalty = 1, mixture = 1) %>%
set_mode("classification") %>%
set_engine("glmnet")
lasso_workflow <- workflow() %>%
add_recipe(recipe_lasso) %>%
add_model(logistic_spec)
# Define and train the logistic regression model with Lasso regularization
logistic_spec <- logistic_reg(penalty = tune()) %>%
set_mode("classification") %>%
set_engine("glmnet")
lasso_workflow <- workflow() %>%
add_recipe(recipe_lasso) %>%
add_model(logistic_spec)
set.seed(253)
lasso_models <- lasso_workflow %>%
tune_grid(
grid = grid_regular(penalty(range = c(-3, -0.5)), levels = 50),
resamples = vfold_cv(home_runs_data, v = 10),
metrics = metric_set(accuracy)
)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
home_runs_data$away_team <- as.factor(home_runs_data$away_team)
home_runs_data$batter_team <- as.factor(home_runs_data$batter_team)
home_runs_data$pitcher_name <- as.factor(home_runs_data$pitcher_name)
home_runs_data$bb_type <- as.factor(home_runs_data$bb_type)
home_runs_data$park <- as.factor(home_runs_data$park)
home_runs_data$Cover <- as.factor(home_runs_data$Cover)
home_runs_data$pitchname <- as.factor(home_runs_data$pitch_name)
home_runs_data$bearing <- as.factor(home_runs_data$bearing)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
home_runs_data$away_team <- as.factor(home_runs_data$away_team)
home_runs_data$batter_team <- as.factor(home_runs_data$batter_team)
home_runs_data$pitcher_name <- as.factor(home_runs_data$pitcher_name)
home_runs_data$bb_type <- as.factor(home_runs_data$bb_type)
home_runs_data$park <- as.factor(home_runs_data$park)
home_runs_data$Cover <- as.factor(home_runs_data$Cover)
home_runs_data$pitchname <- as.factor(home_runs_data$pitch_name)
home_runs_data$bearing <- as.factor(home_runs_data$bearing)
home_runs_data$battername <- as.factor(home_runs_data$batter_name)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
home_runs_data$away_team <- as.factor(home_runs_data$away_team)
home_runs_data$batter_team <- as.factor(home_runs_data$batter_team)
home_runs_data$pitcher_name <- as.factor(home_runs_data$pitcher_name)
home_runs_data$bb_type <- as.factor(home_runs_data$bb_type)
home_runs_data$park <- as.factor(home_runs_data$park)
home_runs_data$Cover <- as.factor(home_runs_data$Cover)
home_runs_data$pitchname <- as.factor(home_runs_data$pitch_name)
home_runs_data$bearing <- as.factor(home_runs_data$bearing)
home_runs_data$batter_name <- as.factor(home_runs_data$batter_name)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
home_runs_data$away_team <- as.factor(home_runs_data$away_team)
home_runs_data$batter_team <- as.factor(home_runs_data$batter_team)
home_runs_data$pitcher_name <- as.factor(home_runs_data$pitcher_name)
home_runs_data$bb_type <- as.factor(home_runs_data$bb_type)
home_runs_data$park <- as.factor(home_runs_data$park)
home_runs_data$Cover <- as.factor(home_runs_data$Cover)
home_runs_data$pitchname <- as.factor(home_runs_data$pitch_name)
home_runs_data$bearing <- as.factor(home_runs_data$bearing)
home_runs_data$batter_name <- as.factor(home_runs_data$batter_name)
summary(home_runs_data)
home_runs_data$home_team <- as.factor(home_runs_data$home_team)
home_runs_data$away_team <- as.factor(home_runs_data$away_team)
home_runs_data$batter_team <- as.factor(home_runs_data$batter_team)
home_runs_data$pitcher_name <- as.factor(home_runs_data$pitcher_name)
home_runs_data$bb_type <- as.factor(home_runs_data$bb_type)
home_runs_data$park <- as.factor(home_runs_data$park)
home_runs_data$Cover <- as.factor(home_runs_data$Cover)
home_runs_data$pitchname <- as.factor(home_runs_data$pitch_name)
home_runs_data$bearing <- as.factor(home_runs_data$bearing)
home_runs_data$batter_name <- as.factor(home_runs_data$batter_name)
library(dplyr)
# Convert all character variables to factors
home_runs_data <- home_runs_data %>%
mutate_if(is.character, as.factor)
